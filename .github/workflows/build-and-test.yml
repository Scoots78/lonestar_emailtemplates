name: Build and Test

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install frontend dependencies
        run: cd frontend && npm ci
      
      - name: Run tests
        run: |
          # Skip gracefully if the project has no test script
          if npm pkg get scripts.test | grep -vq null; then
            echo "Running unit tests…"
            npm test
          else
            echo "No test script defined – skipping tests."
          fi

  build:
    name: Build and validate package
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            frontend/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Test build process
        run: npm run test:build
      
      - name: Build full package
        run: npm run release
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deployment-packages
          path: |
            deploy/*.zip
            deploy/*.tar.gz
            deploy/*.md

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: deployment-packages
          path: deploy
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            deploy/*.zip
            deploy/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
